jobs:
- job: Webhooks_Signed_Build
  displayName: Build AspnetWebHooks-Signed
  dependsOn: Webhooks_Build
  timeoutInMinutes: 60
  workspace:
    clean: all
  pool:
    name: NetCore1ESPool-Svc-Internal
    demands: ImageOverride -equals windows.vs2019.amd64
  variables:
    TeamName: AspNetCore
    _SignType: real
    DOTNET_CLI_TELEMETRY_OPTOUT: 1 # Skip signing telemetry to work around an error
  templateContext:
    outputs:
    - ${{ if notin(variables['Build.Reason'], 'PullRequest') }}:
      - output: nuget
        displayName: Publish packages to general-testing
        useDotNetTask: false
        packagesToPush: '$(Build.SourcesDirectory)/artifacts/packages/**/*.nupkg;!$(Build.SourcesDirectory)/artifacts/packages/**/*.symbols.nupkg'
        packageParentPath: '$(Build.ArtifactStagingDirectory)/'
        publishVstsFeed: 'public/general-testing'
        nuGetFeedType: internal  # Change to external for external
        allowPackageConflicts: true # Optional. NuGetCommand task only.
        publishPackageMetadata: true # Optional
      - output: nuget
        displayName: Publish symbols to general-testing-symbols
        useDotNetTask: false
        packagesToPush: '$(Build.SourcesDirectory)/artifacts/packages/**/*.symbols.nupkg'
        packageParentPath: '$(Build.ArtifactStagingDirectory)/'
        publishVstsFeed: 'public/general-testing-symbols'
        nuGetFeedType: internal  # Change to external for external
        allowPackageConflicts: true # Optional. NuGetCommand task only.
        publishPackageMetadata: true # Optional
  steps:
  - checkout: git://internal/aspnet-AspNetWebHooks-Signed
    clean: true
  - task: MicroBuildSigningPlugin@2
    displayName: Install MicroBuild Signing plugin
    inputs:
      signType: $(_SignType)
      zipSources: false
      feedSource: https://dnceng.pkgs.visualstudio.com/_packaging/MicroBuildToolset/nuget/v3/index.json
  - task: 1ES.DownloadPipelineArtifact@2
    displayName: Download artifacts
    inputs:
      artifactName: artifacts-AspnetWebHooks
      targetPath: '$(Pipeline.Workspace)'
  - script: .\build.cmd
            /t:BuildProjects
            /p:Sign=Sign
            /p:SignType=$(_SignType)
            /p:DropSource=$(Pipeline.Workspace)/artifacts-AspnetWebHooks/
            $(BuildScriptArgs)
            /bl:artifacts/logs/Build-Sign.binlog
    displayName: Build & Sign
  - task: 1ES.PublishPipelineArtifact@1
    displayName: Upload packages
    condition: eq(variables['system.pullrequest.isfork'], false)
    continueOnError: true
    inputs:
      patht: artifacts/packages/
      artifactName: artifacts-AspnetWebHooks-Signed-packages
  - task: 1ES.PublishPipelineArtifact@1
    displayName: Upload logs
    continueOnError: true
    inputs:
      path: artifacts/logs/
      artifactName: artifacts-AspnetWebHooks-Signed-logs